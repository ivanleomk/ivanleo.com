{
  "version": 3,
  "sources": ["../../../contentlayer.config.ts"],
  "sourcesContent": ["import { defineDocumentType, makeSource } from \"contentlayer/source-files\";\nimport { format } from \"date-fns\";\nimport { readFileSync } from \"fs\";\nimport rehypePrettyCode from \"rehype-pretty-code\";\n\nfunction processString(inputString: string) {\n  const escapedString = inputString\n    .replace(/[\\\\\"']/g, \"\\\\$&\")\n    .replace(/\\u0000/g, \"\\\\0\");\n  const lowerCaseString = escapedString.toLowerCase();\n  const words = lowerCaseString.split(/\\W+/);\n  const processedString = words.join(\"_\");\n  return processedString;\n}\n\nconst Post = defineDocumentType(() => ({\n  name: \"Post\",\n  filePathPattern: `**/*.mdx`,\n  contentType: \"mdx\",\n  fields: {\n    title: {\n      type: \"string\",\n      description: \"The title of the post\",\n      required: true,\n    },\n    date: {\n      type: \"date\",\n      description: \"The date of the post\",\n      required: true,\n    },\n    description: {\n      type: \"string\",\n      required: true,\n    },\n    categories: {\n      type: \"list\",\n      of: { type: \"string\" },\n      required: false,\n    },\n  },\n  computedFields: {\n    url: {\n      type: \"string\",\n      resolve: (doc) => `/posts/${doc._raw.flattenedPath}`,\n    },\n    slug: {\n      type: \"string\",\n      resolve: (doc) => processString(doc.title),\n    },\n    parsed_date: {\n      type: \"string\",\n      resolve: (doc) => format(new Date(doc.date), \"MMM dd, yyyy\"),\n    },\n    parsed_tags: {\n      type: \"list\",\n      of: {\n        type: \"object\",\n      },\n      resolve: (doc) => {\n        //@ts-ignore\n        const items = doc?.categories?._array as unknown as string[];\n\n        return items.map((item: string) => {\n          return {\n            name: item,\n            slug: processString(item),\n          };\n        });\n      },\n    },\n  },\n}));\n\nconst themePath = \"./assets/OneHunterTheme.json\";\nexport default makeSource({\n  contentDirPath: \"posts\",\n  documentTypes: [Post],\n  mdx: {\n    rehypePlugins: [\n      [\n        rehypePrettyCode,\n        {\n          // theme: \"github-dark\",\n          theme: JSON.parse(readFileSync(themePath, \"utf-8\")),\n          onVisitLine(node: any) {\n            // Prevent lines from collapsing in `display: grid` mode, and allow empty\n            // lines to be copy/pasted\n            if (node.children.length === 0) {\n              node.children = [{ type: \"text\", value: \" \" }];\n            }\n          },\n          onVisitHighlightedLine(node: any) {\n            node.properties.className.push(\"line--highlighted\");\n          },\n          onVisitHighlightedWord(node: any) {\n            node.properties.className = [\"word--highlighted\"];\n          },\n        },\n      ],\n      [\n        rehypeAutolinkHeadings,\n        {\n          properties: {\n            className: [\"subheading-anchor\"],\n            ariaLabel: \"Link to section\",\n          },\n        },\n      ],\n    ],\n  },\n});\n"],
  "mappings": ";AAAA,SAAS,oBAAoB,kBAAkB;AAC/C,SAAS,cAAc;AACvB,SAAS,oBAAoB;AAC7B,OAAO,sBAAsB;AAE7B,SAAS,cAAc,aAAqB;AAC1C,QAAM,gBAAgB,YACnB,QAAQ,WAAW,MAAM,EACzB,QAAQ,WAAW,KAAK;AAC3B,QAAM,kBAAkB,cAAc,YAAY;AAClD,QAAM,QAAQ,gBAAgB,MAAM,KAAK;AACzC,QAAM,kBAAkB,MAAM,KAAK,GAAG;AACtC,SAAO;AACT;AAEA,IAAM,OAAO,mBAAmB,OAAO;AAAA,EACrC,MAAM;AAAA,EACN,iBAAiB;AAAA,EACjB,aAAa;AAAA,EACb,QAAQ;AAAA,IACN,OAAO;AAAA,MACL,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,aAAa;AAAA,MACb,UAAU;AAAA,IACZ;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,UAAU;AAAA,IACZ;AAAA,IACA,YAAY;AAAA,MACV,MAAM;AAAA,MACN,IAAI,EAAE,MAAM,SAAS;AAAA,MACrB,UAAU;AAAA,IACZ;AAAA,EACF;AAAA,EACA,gBAAgB;AAAA,IACd,KAAK;AAAA,MACH,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,UAAU,IAAI,KAAK;AAAA,IACvC;AAAA,IACA,MAAM;AAAA,MACJ,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,cAAc,IAAI,KAAK;AAAA,IAC3C;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,SAAS,CAAC,QAAQ,OAAO,IAAI,KAAK,IAAI,IAAI,GAAG,cAAc;AAAA,IAC7D;AAAA,IACA,aAAa;AAAA,MACX,MAAM;AAAA,MACN,IAAI;AAAA,QACF,MAAM;AAAA,MACR;AAAA,MACA,SAAS,CAAC,QAAQ;AAEhB,cAAM,QAAQ,KAAK,YAAY;AAE/B,eAAO,MAAM,IAAI,CAAC,SAAiB;AACjC,iBAAO;AAAA,YACL,MAAM;AAAA,YACN,MAAM,cAAc,IAAI;AAAA,UAC1B;AAAA,QACF,CAAC;AAAA,MACH;AAAA,IACF;AAAA,EACF;AACF,EAAE;AAEF,IAAM,YAAY;AAClB,IAAO,8BAAQ,WAAW;AAAA,EACxB,gBAAgB;AAAA,EAChB,eAAe,CAAC,IAAI;AAAA,EACpB,KAAK;AAAA,IACH,eAAe;AAAA,MACb;AAAA,QACE;AAAA,QACA;AAAA;AAAA,UAEE,OAAO,KAAK,MAAM,aAAa,WAAW,OAAO,CAAC;AAAA,UAClD,YAAY,MAAW;AAGrB,gBAAI,KAAK,SAAS,WAAW,GAAG;AAC9B,mBAAK,WAAW,CAAC,EAAE,MAAM,QAAQ,OAAO,IAAI,CAAC;AAAA,YAC/C;AAAA,UACF;AAAA,UACA,uBAAuB,MAAW;AAChC,iBAAK,WAAW,UAAU,KAAK,mBAAmB;AAAA,UACpD;AAAA,UACA,uBAAuB,MAAW;AAChC,iBAAK,WAAW,YAAY,CAAC,mBAAmB;AAAA,UAClD;AAAA,QACF;AAAA,MACF;AAAA,MACA;AAAA,QACE;AAAA,QACA;AAAA,UACE,YAAY;AAAA,YACV,WAAW,CAAC,mBAAmB;AAAA,YAC/B,WAAW;AAAA,UACb;AAAA,QACF;AAAA,MACF;AAAA,IACF;AAAA,EACF;AACF,CAAC;",
  "names": []
}
